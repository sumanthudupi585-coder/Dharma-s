{"version":3,"file":"static/js/67.4f1df75c.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs"],"sourcesContent":["class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nexport { _objectWithoutProperties as default };","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n};\n\nexport { MotionGlobalConfig };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.18.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","function _objectDestructuringEmpty(t) {\n  if (null == t) throw new TypeError(\"Cannot destructure \" + t);\n}\nexport { _objectDestructuringEmpty as default };","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.18.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.18.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n"],"names":["Queue","constructor","this","order","scheduled","Set","add","process","has","push","remove","index","indexOf","splice","delete","clear","length","stepsOrder","schedule","frame","cancel","cancelFrame","state","frameData","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","callback","addToCurrentFrame","arguments","undefined","queue","i","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","noop","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","useIsomorphicLayoutEffect","render","animationState","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","LayoutGroupContext","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","_objectWithoutProperties","e","t","o","r","n","getOwnPropertySymbols","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","read","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","MotionGlobalConfig","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","_visualElement$makeTa","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","resolveCSSVariables","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref0","_ref1","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref10","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig","useLayoutEffect","any"],"sourceRoot":""}