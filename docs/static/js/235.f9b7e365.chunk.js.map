{"version":3,"file":"static/js/235.f9b7e365.chunk.js","mappings":"sNAMA,MAAMA,GAASC,EAAAA,EAAAA,IAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uLAMlBC,GAAQH,EAAAA,EAAAA,IAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,uNAMjBG,EAAaC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,mwBAcZC,GAcXM,EAAcH,EAAAA,GAAOC,IAAGG,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,0OAYxBS,EAAYL,EAAAA,GAAOC,IAAGK,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,kcAetBW,EAAgBP,EAAAA,GAAOQ,GAAEC,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,iYAUhBH,GAGTiB,EAAUV,EAAAA,GAAOW,EAACC,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,4KASlBiB,GAAOb,EAAAA,EAAAA,IAAOc,EAAAA,EAAOb,IAAdD,CAAkBe,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,mFAMzBoB,GAAehB,EAAAA,EAAAA,IAAOc,EAAAA,EAAOG,OAAdjB,CAAqBkB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,mpBAwB3B,SAASuB,IACtB,MAAM,SAAEC,IAAaC,EAAAA,EAAAA,MAwBrB,OACEC,EAAAA,EAAAA,KAACvB,EAAU,CAAAwB,UACTC,EAAAA,EAAAA,MAACrB,EAAW,CAAAoB,SAAA,EACVD,EAAAA,EAAAA,KAACjB,EAAS,KACViB,EAAAA,EAAAA,KAACf,EAAa,CAAAgB,SAAC,qBACfD,EAAAA,EAAAA,KAACZ,EAAO,CAAAa,SAAC,4BACTC,EAAAA,EAAAA,MAACX,EAAI,CAACY,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAAMC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAAKE,WAAY,CAAEC,SAAU,KAAOP,SAAA,EAClGD,EAAAA,EAAAA,KAACN,EAAY,CAACe,UAAU,iBAAiBC,WAAY,CAAEC,MAAO,MAAQC,SAAU,CAAED,MAAO,KAAQE,QA7BnFC,KACpBhB,EAAS,CAAEiB,KAAMC,EAAAA,GAAQC,eAAgBC,QAASC,EAAAA,GAAYC,oBA4BgEnB,SAAC,uBAGzHD,EAAAA,EAAAA,KAACN,EAAY,CAACe,UAAU,iBAAiBC,WAAY,CAAEC,MAAO,MAAQC,SAAU,CAAED,MAAO,KAAQE,QA5BlFQ,KACrB,IACE,MAAMC,EAAMC,aAAaC,QAAQ,2BACjC,GAAIF,EAAK,CACP,MAAMG,EAASC,KAAKC,MAAML,GAC1BxB,EAAS,CAAEiB,KAAMC,EAAAA,GAAQY,WAAYV,QAASO,GAChD,MACE3B,EAAS,CAAEiB,KAAMC,EAAAA,GAAQC,eAAgBC,QAASC,EAAAA,GAAYC,kBAElE,CAAE,MAAOS,GACP/B,EAAS,CAAEiB,KAAMC,EAAAA,GAAQC,eAAgBC,QAASC,EAAAA,GAAYC,kBAChE,GAiB+HnB,SAAC,mBAG1HD,EAAAA,EAAAA,KAACN,EAAY,CAACe,UAAU,iBAAiBC,WAAY,CAAEC,MAAO,MAAQC,SAAU,CAAED,MAAO,KAAQE,QAjBlFiB,KACrBC,MAAM,4BAgByH9B,SAAC,2BAOpI,C","sources":["components/TitleScreen.js"],"sourcesContent":["import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { useGame, ACTIONS, GAME_STATES } from '../context/GameContext';\n\n// Subtle breathing glow for golden elements\nconst breath = keyframes`\n  0%, 100% { text-shadow: 0 0 14px rgba(212,175,55,0.35), 0 2px 0 rgba(0,0,0,0.35); }\n  50%      { text-shadow: 0 0 24px rgba(255,215,0,0.55), 0 2px 0 rgba(0,0,0,0.35); }\n`;\n\n// Slow ambient motion for background aura\nconst drift = keyframes`\n  0%   { transform: translate(-5%, -5%) scale(1); opacity: 0.35; }\n  50%  { transform: translate(5%, 5%) scale(1.05); opacity: 0.55; }\n  100% { transform: translate(-5%, -5%) scale(1); opacity: 0.35; }\n`;\n\nconst ScreenRoot = styled.div`\n  min-height: 100vh;\n  width: 100%;\n  position: relative;\n  overflow: hidden;\n  background: radial-gradient(ellipse at center, #070707 0%, #0a0a0a 55%, #000 100%);\n\n  &::before {\n    content: '';\n    position: absolute;\n    inset: -20%;\n    background: radial-gradient(60% 60% at 50% 45%, rgba(212,175,55,0.10) 0%, rgba(0,0,0,0) 60%),\n                radial-gradient(40% 40% at 70% 60%, rgba(255,215,0,0.08) 0%, rgba(0,0,0,0) 70%);\n    filter: blur(26px);\n    animation: ${drift} 18s ease-in-out infinite;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    inset: 0;\n    background-image: radial-gradient(rgba(255,255,255,0.03) 1px, transparent 1px);\n    background-size: 3px 3px;\n    opacity: 0.06;\n    pointer-events: none;\n  }\n`;\n\nconst CenterStack = styled.div`\n  position: relative;\n  z-index: 1;\n  max-width: 860px;\n  margin: 0 auto;\n  padding: var(--spacing-xxl) var(--spacing-xl);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: var(--spacing-xl);\n`;\n\nconst TitleHalo = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: clamp(280px, 60vw, 720px);\n  height: clamp(120px, 22vw, 240px);\n  transform: translate(-50%, calc(-50% - 40px));\n  border-radius: 1000px;\n  background:\n    radial-gradient(65% 120% at 50% 50%, rgba(212,175,55,0.18), rgba(212,175,55,0) 70%),\n    radial-gradient(100% 220% at 50% 100%, rgba(255,215,0,0.10), rgba(0,0,0,0) 60%);\n  filter: blur(18px);\n  pointer-events: none;\n`;\n\nconst TitleWordmark = styled.h1`\n  font-family: var(--font-display);\n  font-size: clamp(3rem, 9vw, 6rem);\n  letter-spacing: 0.14em;\n  line-height: 1.05;\n  margin: 0;\n  background: linear-gradient(180deg, #fff4b0 0%, #ffd700 30%, #d4af37 60%, #9b7b19 100%);\n  -webkit-background-clip: text;\n  background-clip: text;\n  -webkit-text-fill-color: transparent;\n  animation: ${breath} 4.2s ease-in-out infinite;\n`;\n\nconst Whisper = styled.p`\n  font-family: var(--font-primary);\n  color: #b8941f;\n  opacity: 0.8;\n  margin-top: -6px;\n  text-align: center;\n  font-size: clamp(0.95rem, 2.5vw, 1.1rem);\n`;\n\nconst Menu = styled(motion.div)`\n  display: grid;\n  gap: var(--spacing-md);\n  width: min(92vw, 520px);\n`;\n\nconst ActionButton = styled(motion.button)`\n  appearance: none;\n  width: 100%;\n  padding: 14px 26px;\n  border-radius: 999px;\n  border: 1px solid rgba(212,175,55,0.35);\n  background: linear-gradient(145deg, rgba(0,0,0,0.82), rgba(18,18,18,0.95));\n  color: #e8c86a;\n  font-family: var(--font-primary);\n  font-weight: 700;\n  font-size: 1.08rem;\n  letter-spacing: 0.04em;\n  cursor: pointer;\n  transition: background 0.25s ease, transform 0.18s ease, color 0.25s ease, border-color 0.25s ease;\n  backdrop-filter: blur(8px);\n\n  &:hover {\n    color: #000;\n    background: linear-gradient(145deg, #ffd95e, #ffc82e);\n    border-color: #ffd95e;\n    transform: translateY(-2px);\n  }\n`;\n\nexport default function TitleScreen() {\n  const { dispatch } = useGame();\n\n  const handleNewGame = () => {\n    dispatch({ type: ACTIONS.SET_GAME_STATE, payload: GAME_STATES.PROFILE_CREATION });\n  };\n\n  const handleLoadGame = () => {\n    try {\n      const raw = localStorage.getItem('dharmas-cipher-state-v1');\n      if (raw) {\n        const parsed = JSON.parse(raw);\n        dispatch({ type: ACTIONS.LOAD_STATE, payload: parsed });\n      } else {\n        dispatch({ type: ACTIONS.SET_GAME_STATE, payload: GAME_STATES.PROFILE_CREATION });\n      }\n    } catch (e) {\n      dispatch({ type: ACTIONS.SET_GAME_STATE, payload: GAME_STATES.PROFILE_CREATION });\n    }\n  };\n\n  const handleSettings = () => {\n    alert('Settings will be added.');\n  };\n\n  return (\n    <ScreenRoot>\n      <CenterStack>\n        <TitleHalo />\n        <TitleWordmark>Dharma's Cipher</TitleWordmark>\n        <Whisper>Whisper the first vow.</Whisper>\n        <Menu initial={{ opacity: 0, y: 10 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.35 }}>\n          <ActionButton className=\"is-interactive\" whileHover={{ scale: 1.01 }} whileTap={{ scale: 0.99 }} onClick={handleNewGame}>\n            Start New Journey\n          </ActionButton>\n          <ActionButton className=\"is-interactive\" whileHover={{ scale: 1.01 }} whileTap={{ scale: 0.99 }} onClick={handleLoadGame}>\n            Continue Path\n          </ActionButton>\n          <ActionButton className=\"is-interactive\" whileHover={{ scale: 1.01 }} whileTap={{ scale: 0.99 }} onClick={handleSettings}>\n            Sacred Settings\n          </ActionButton>\n        </Menu>\n      </CenterStack>\n    </ScreenRoot>\n  );\n}\n"],"names":["breath","keyframes","_templateObject","_taggedTemplateLiteral","drift","_templateObject2","ScreenRoot","styled","div","_templateObject3","CenterStack","_templateObject4","TitleHalo","_templateObject5","TitleWordmark","h1","_templateObject6","Whisper","p","_templateObject7","Menu","motion","_templateObject8","ActionButton","button","_templateObject9","TitleScreen","dispatch","useGame","_jsx","children","_jsxs","initial","opacity","y","animate","transition","duration","className","whileHover","scale","whileTap","onClick","handleNewGame","type","ACTIONS","SET_GAME_STATE","payload","GAME_STATES","PROFILE_CREATION","handleLoadGame","raw","localStorage","getItem","parsed","JSON","parse","LOAD_STATE","e","handleSettings","alert"],"sourceRoot":""}